import { useEffect, useRef } from "react";

import styles from "./ColorChager.module.css";
import { generateRandomColor } from "../model/generateColor";

interface ColorChangerProps {
  className?: string;
}

export const ColorChanger = (props: ColorChangerProps) => {
  const { className } = props;
  const boxRef = useRef<HTMLDivElement>(null);

  const handelColorChange = () => {
    if (boxRef && boxRef.current) {
      boxRef.current.style.backgroundColor = generateRandomColor();
    }
  };

  useEffect(() => {
    if (boxRef && boxRef.current) {
      boxRef.current.style.backgroundColor = generateRandomColor();
    }
  }, []);

  return (
    <div className={className}>
      <button className={styles.changer} onClick={handelColorChange}>
        –ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç
      </button>
      <p>–° –ø–æ–º–æ—â—å—é üëÜ —ç—Ç–æ–π –∫–ø–æ–ø–∫–∏ </p>
      <p>–ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å —Ü–≤–µ—Ç –≤–æ—Ç —ç—Ç–æ–≥–æ üëá —ç–ª–µ–º–µ–Ω—Ç–∞.</p>
      <div className={styles.box} ref={boxRef}></div>
      <p>
        –ò–º–µ–Ω–Ω–æ —Å –ø–æ–º–æ—â—å—é <span className={styles.underscore}>Javascript</span>{" "}
        –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Ç–∞–∫–∏–µ —à—Ç—É–∫–∏ üò±üòä
      </p>
    </div>
  );
};
